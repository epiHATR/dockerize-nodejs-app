name: Create Docker Built Image
on:
  workflow_dispatch:
    inputs:
      publishStable:
        type: boolean
        description: publish stable
        default: false
      targetRegistry:
        type: choice
        description: Target Registry
        default: Docker Hub
        options:
          - Docker Hub
          - Azure Container Registry
      imageName:
        required: true
        type: text
        description: Image name

jobs:
  UnitTest:
    name: Run NodeJS unit test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v3

      - name: install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - run: npm install

      - name: unit test
        run: |
          npm run test

  PublishDockerHub:
    name: Publish To DockerHub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    needs: [UnitTest]
    steps:
      - uses: actions/checkout@v3

      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x      

      - name: create build version
        id: get_version
        run: |
          version=$(npm pkg get version | sed 's|"||g')
          if [ "${{ github.event.inputs.publishStable }}" == false ]
          then
            echo "tag=$version-pre-${{ github.run_number}}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=$version" >> "$GITHUB_OUTPUT"
          fi

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to ACR
        uses: docker/login-action@v2
        if: github.event.inputs.targetRegistry == 'Azure Container Registry'
        with: 
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: login to Docker Hub
        if: github.event.inputs.targetRegistry == 'Docker Hub'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push to ACR
        uses: docker/build-push-action@v4
        if: github.event.inputs.targetRegistry == 'Azure Container Registry'
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_ENDPOINT }}/${{ github.event.inputs.imageName }}/dockerize-nodejs-app:${{ steps.get_version.outputs.tag }}

      - name: build and push to DockerHub
        uses: docker/build-push-action@v4
        if: github.event.inputs.targetRegistry == 'Docker Hub'
        with:
          context: ./src
          push: true
          tags: ${{ github.event.inputs.imageName }}/dockerize-nodejs-app:${{ steps.get_version.outputs.tag }}
